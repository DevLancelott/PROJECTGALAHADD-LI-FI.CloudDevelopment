#!/bin/bash

# Format all files in the Li-Fi Project
# This script runs all formatters on the project

set -e

echo "üé® Formatting all files in Li-Fi Project..."

# Format Python files
echo "üêç Formatting Python files..."
if command -v black &> /dev/null; then
    black . --line-length 100
    echo "‚úÖ Black formatting complete"
else
    echo "‚ö†Ô∏è  Black not found, skipping Python formatting"
fi

if command -v isort &> /dev/null; then
    isort . --profile black --line-length 100
    echo "‚úÖ isort formatting complete"
else
    echo "‚ö†Ô∏è  isort not found, skipping import sorting"
fi

# Format JavaScript, JSON, YAML, and Markdown files
echo "üìÑ Formatting JS/JSON/YAML/MD files..."
if command -v npx &> /dev/null; then
    npx prettier --write "**/*.{js,jsx,ts,tsx,json,yaml,yml,md}" --ignore-path .gitignore
    echo "‚úÖ Prettier formatting complete"
else
    echo "‚ö†Ô∏è  npx not found, skipping JS/JSON/YAML/MD formatting"
fi

# Format C++ and Arduino files
echo "‚öôÔ∏è  Formatting C++/Arduino files..."
if command -v clang-format &> /dev/null; then
    find . -name "*.cpp" -o -name "*.h" -o -name "*.c" -o -name "*.ino" | grep -v "venv" | grep -v ".git" | xargs -I {} clang-format -i {}
    echo "‚úÖ clang-format formatting complete"
else
    echo "‚ö†Ô∏è  clang-format not found, skipping C++ formatting"
fi

# Format shell scripts
echo "üêö Formatting shell scripts..."
if command -v shfmt &> /dev/null; then
    find . -name "*.sh" -o -name "*.bash" | grep -v "venv" | grep -v ".git" | xargs -I {} shfmt -w {}
    echo "‚úÖ shfmt formatting complete"
else
    echo "‚ö†Ô∏è  shfmt not found, skipping shell formatting"
fi

echo "üéâ All formatting complete!"
echo ""
echo "üìã Formatted file types:"
echo "  ‚Ä¢ Python (.py, .pyi)"
echo "  ‚Ä¢ JavaScript/TypeScript (.js, .jsx, .ts, .tsx)"
echo "  ‚Ä¢ JSON (.json)"
echo "  ‚Ä¢ YAML (.yaml, .yml)"
echo "  ‚Ä¢ Markdown (.md)"
echo "  ‚Ä¢ C++/Arduino (.cpp, .h, .c, .ino)"
echo "  ‚Ä¢ Shell (.sh, .bash)" 