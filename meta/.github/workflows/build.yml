name: LI-FI Build and Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      target_board:
        description: "Target board to build"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - esp8266
          - esp32
          - rpi3
          - rpi4
          - arduino_uno
          - pico

env:
  REGISTRY: gcr.io
  IMAGE_NAME: galahadd-lifi-dev/lifi

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [esp8266, esp32, rpi3, rpi4, arduino_uno, pico]
        include:
          - board: esp8266
            platform: linux/amd64
          - board: esp32
            platform: linux/amd64
          - board: rpi3
            platform: linux/amd64,linux/arm64
          - board: rpi4
            platform: linux/amd64,linux/arm64
          - board: arduino_uno
            platform: linux/amd64
          - board: pico
            platform: linux/amd64,linux/arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # GCP Authentication using Workload Identity
      # Ensure these secrets are configured in your GitHub repository settings
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.board }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.board }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install Skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
          chmod +x skaffold
          sudo mv skaffold /usr/local/bin/

      - name: Deploy with Skaffold
        if: github.ref == 'refs/heads/main'
        run: |
          skaffold deploy --profile=gke-cloudbuild --module=${{ matrix.board }}

  test:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests
        run: |
          # Add your test commands here
          echo "Running tests for LI-FI project"
          # Example: docker run --rm lifi-dev:latest python -m pytest

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "gcr.io/galahadd-lifi-dev/lifi/esp8266:latest"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
